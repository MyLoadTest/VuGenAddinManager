<Window x:Class="MyLoadTest.VuGenAddInManager.View.AddInManagerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        mc:Ignorable="d"
        xmlns:core="clr-namespace:ICSharpCode.Core.Presentation;assembly=ICSharpCode.Core.Presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModel="clr-namespace:MyLoadTest.VuGenAddInManager.ViewModel"
        xmlns:model="clr-namespace:MyLoadTest.VuGenAddInManager.Model"
        xmlns:view="clr-namespace:MyLoadTest.VuGenAddInManager.View"
        xmlns:properties="clr-namespace:MyLoadTest.VuGenAddInManager.Properties"
        xmlns:self="clr-namespace:MyLoadTest.VuGenAddInManager"
        Height="600" Width="800" MinHeight="480" MinWidth="640"
        WindowStartupLocation="CenterOwner" ShowInTaskbar="False" WindowStyle="ThreeDBorderWindow"
        ResizeMode="CanResize" self:ExtraWindowStyles.CanMinimize="False">
    <!--Style="{x:Static core:GlobalStyles.DialogWindowStyle}"-->

    <Window.DataContext>
        <viewModel:AddInManagerViewModel x:Name="ViewModel" />
    </Window.DataContext>

    <Window.Resources>
        <Style TargetType="Button" BasedOn="{x:Static core:GlobalStyles.ButtonStyle}" />

        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

        <BitmapImage x:Key="ErrorIcon"
                UriSource="pack://application:,,,/MyLoadTest.VuGenAddInManager;component/Resources/exclamation.png" />

        <Style x:Key="ErrorImageStyle" TargetType="{x:Type Image}">
            <Setter Property="Visibility" Value="{Binding Path=HasError, Converter={StaticResource BoolToVisibility}}" />
            <Setter Property="Source" Value="{StaticResource ErrorIcon}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Name="BlinkingIconStoryboard">
                            <Storyboard>
                                <DoubleAnimation
                                        RepeatBehavior="Forever" AutoReverse="True"
                                        From="1" To="0" Duration="0:0:0.75"
                                        Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExpanderHeaderTextStyle" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <DataTrigger d:DataContext="{d:DesignInstance viewModel:AddInsViewModelBase}"
                        Binding="{Binding HasHighlightCount}" Value="True">
                    <Setter Property="FontWeight" Value="Bold" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Text" d:DataContext="{d:DesignInstance viewModel:AddInsViewModelBase}"
                    Value="{Binding TitleWithHighlight}" />
        </Style>

        <DataTemplate x:Key="ExpanderHeaderTemplate">
            <Grid>
                <TextBlock Style="{StaticResource ExpanderHeaderTextStyle}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="PackageRepositoryItemTemplate" DataType="{x:Type model:PackageRepository}">
            <TextBlock Text="{Binding Path=NameWithHighlight}" ToolTip="{Binding Path=NameWithHighlight}"
                    TextWrapping="Wrap">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasHighlightCount}" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DataTemplate>

        <Style x:Key="ViewModelExpanderStyle" TargetType="{x:Type Expander}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Expander.IsExpanded)}"
                        Value="True">
                    <Setter Property="Background" Value="{x:Static SystemColors.WindowBrush}" />
                    <Setter Property="BorderBrush" Value="{x:Static SystemColors.WindowTextBrush}" />
                    <Setter Property="BorderThickness" Value="1" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Padding" Value="2" />
            <Setter Property="Margin" Value="0,5,0,5" />
        </Style>

        <Style x:Key="ViewModelExpanderListStyle" TargetType="{x:Type ListBox}">
            <Style.Triggers>
                <DataTrigger d:DataContext="{d:DesignInstance viewModel:AddInsViewModelBase}"
                        Binding="{Binding PackageRepositories.Count}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ViewModelExpanderItemTemplate" DataType="{x:Type viewModel:AddInsViewModelBase}">
            <Expander
                    Header="{Binding}"
                    HeaderTemplate="{StaticResource ExpanderHeaderTemplate}"
                    Style="{StaticResource ViewModelExpanderStyle}"
                    IsExpanded="{Binding IsExpandedInView}">
                <ListBox
                        Style="{StaticResource ViewModelExpanderListStyle}"
                        ItemsSource="{Binding PackageRepositories}"
                        ItemTemplate="{StaticResource PackageRepositoryItemTemplate}"
                        SelectedItem="{Binding Path=SelectedPackageSource}"
                        BorderThickness="0"
                        Background="Transparent"
                        Margin="1,1,1,1"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden" />
            </Expander>
        </DataTemplate>
    </Window.Resources>

    <Window.Title>
        <Binding Path="Title" />
    </Window.Title>

    <Grid x:Name="MainPanel">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".3*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ItemsControl
                x:Name="ViewNavigationList"
                Grid.Column="0"
                ItemsSource="{Binding ViewModels}"
                ItemTemplate="{StaticResource ViewModelExpanderItemTemplate}"
                Margin="3,3,3,3" />

        <DockPanel x:Name="ContentPanel" Grid.Column="1">
            <Grid
                    DockPanel.Dock="Bottom"
                    Margin="4, 4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <Image
                            Margin="4, 4"
                            Style="{StaticResource ErrorImageStyle}" />
                </StackPanel>
                <TextBlock
                        Grid.Column="1"
                        Margin="4, 4"
                        TextTrimming="CharacterEllipsis"
                        Text="{Binding Path=Message}"
                        ToolTip="{Binding Path=Message}" />
                <Button
                        Grid.Column="2"
                        Content="{x:Static properties:Resources.AddInManager_CloseButtonText}"
                        IsCancel="True" />
            </Grid>

            <Grid x:Name="ContentAreaGrid">
                <view:AddInsView
                        x:Name="InstalledPackagesView"
                        DataContext="{Binding InstalledAddInsViewModel}"
                        Visibility="{Binding IsExpandedInView, Converter={StaticResource BoolToVisibility}}" />
                <view:AddInsView
                        x:Name="PackageUpdatesView"
                        DataContext="{Binding UpdatedAddInsViewModel}"
                        Visibility="{Binding IsExpandedInView, Converter={StaticResource BoolToVisibility}}" />
                <view:AddInsView
                        x:Name="AvailablePackagesView"
                        DataContext="{Binding AvailableAddInsViewModel}"
                        Visibility="{Binding IsExpandedInView, Converter={StaticResource BoolToVisibility}}" />
            </Grid>
        </DockPanel>
    </Grid>
</Window>